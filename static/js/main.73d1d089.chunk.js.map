{"version":3,"sources":["components/fetchAPI.js","components/ReasonBox.js","bell.mp3","components/Timer.js","components/Header.js","components/Stats.js","components/CustomTextField.js","components/DatePicker.js","components/Tasks.js","components/CustomCalendar.js","App.js","reportWebVitals.js","index.js"],"names":["fetchAPI","field","metadata","a","res","localStorage","getItem","e","console","log","setItem","JSON","stringify","id","data","parse","map","_data","Math","max","method","Promise","resolve","reject","body","push","filter","status","ReasonBox","props","openHandle","useState","reason","state","setState","handleSubmit","pauseTime","pauseReason","intervalid","pause","startTime","session","headers","prevState","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","DialogContentText","TextField","variant","style","margin","value","onChange","target","DialogActions","Button","onClick","color","autoFocus","Timer","audio","Audio","bell","running","started","time","h","m","s","seconds","sessionId","relax","useEffect","fetchData","length","interval","ssid","countDown","play","secondsToTime","hours","floor","toggleTimer","setInterval","moment","format","subtract","clearInterval","pauseTimer","className","display","Header","padding","Chart","register","Tooltip","CategoryScale","LinearScale","Title","registerables","Stats","pauseResponse","startResponse","intervals","average","chartdata","type","labels","datasets","label","backgroundColor","options","plugins","title","text","legend","position","fetchStats","sum","date1","date2","diff","avg","toFixed","dayTimeAverage","targetIntervals","i","testIntervals","temp_intervals","hour","temp_sum","ts","min","minute","log10","plotGraph","colors","idx","CustomTextField","theme","classes","primaryColor","secondaryColor","highlightColor","brightColor","makeStyles","root","background","borderColor","cssLabel","cssOutlinedInput","cssInputLabel","notchedOutline","cssFocused","disabled","width","InputLabelProps","focused","InputProps","inputMode","textHandler","DatePicker","date","dateHandler","Tasks","newTask","description","deadline","tasks","opened","submitHandler","taskid","deleteTask","task","alert","fetchTasks","onDoubleClick","fromNow","CustomCalendar","events","event","Date","height","justifyContent","initialView","timeGridPlugin","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73d1d089.chunk.js","sourcesContent":["export async function fetchAPI(field, metadata) {\r\n  // const res = await fetch(`http://localhost:5000/${field}`, metadata);\r\n  let res;\r\n  try {\r\n    res = localStorage.getItem(`${field}`);\r\n  } catch (e) {\r\n    console.log(\"error\", e);\r\n    localStorage.setItem(`${field}`, JSON.stringify(\"[]\"));\r\n    res = localStorage.getItem(`${field}`);\r\n  }\r\n  let id = 1;\r\n  let data = [];\r\n  if (!res || res === '\"[]\"') {\r\n    localStorage.setItem(`${field}`, JSON.stringify(\"[]\"));\r\n    res = localStorage.getItem(`${field}`);\r\n  } else {\r\n    data = await JSON.parse(res);\r\n    data.map((_data) => {\r\n      id = Math.max(_data.id + 1, id);\r\n    });\r\n  }\r\n\r\n  // console.log(\"id:\", id);\r\n  // console.log(\"data\", data);\r\n  // console.log(\"metadata\", metadata);\r\n  if (metadata.method === \"GET\") {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(data);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  } else if (metadata.method === \"POST\") {\r\n    metadata.body = JSON.parse(metadata.body);\r\n    data.push(metadata.body);\r\n    localStorage.setItem(`${field}`, JSON.stringify(data));\r\n    return data;\r\n  } else if (metadata.method === \"DELETE\") {\r\n    data = data.filter((_data) => {\r\n      return _data.id !== metadata.id;\r\n    });\r\n    localStorage.setItem(`${field}`, JSON.stringify(data));\r\n    return { status: 200 };\r\n  } else {\r\n    return id;\r\n  }\r\n}\r\n","import { React, useState } from \"react\";\r\nimport {\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  Dialog,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { fetchAPI } from \"./fetchAPI\";\r\n\r\nconst ReasonBox = ({ props, openHandle }) => {\r\n  const [state, setState] = useState({\r\n    reason: \"\",\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const pauseTime = props.pauseTime;\r\n    const pauseReason = state.reason;\r\n    const intervalid = await fetchAPI(`interval`, { method: \"id\" });\r\n    const pause = {\r\n      startTime: props.startTime,\r\n      pauseTime: pauseTime,\r\n      reason: pauseReason,\r\n      session: props.id,\r\n      id: intervalid,\r\n    };\r\n    console.log(\"pause\", pause);\r\n    const res = await fetchAPI(`interval`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(pause),\r\n    });\r\n\r\n    console.log(\"fetch response\", res);\r\n    setState((prevState) => {\r\n      return { ...prevState, reason: \"\" };\r\n    });\r\n    openHandle(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => {\r\n          handleSubmit(false);\r\n        }}\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Reason</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Why do you want to pause?</DialogContentText>\r\n        </DialogContent>\r\n        <TextField\r\n          id=\"filled-basic\"\r\n          variant=\"filled\"\r\n          style={{ margin: \"20px\" }}\r\n          value={props.reason}\r\n          onChange={(e) => {\r\n            setState((prevState) => {\r\n              return { ...prevState, reason: e.target.value };\r\n            });\r\n          }}\r\n        />\r\n        <DialogActions>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Relax\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n            Done\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReasonBox;\r\n","export default __webpack_public_path__ + \"static/media/bell.fe6f84c7.mp3\";","import moment from \"moment\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReasonBox from \"./ReasonBox\";\r\nimport bell from \"../bell.mp3\";\r\nimport { fetchAPI } from \"./fetchAPI\";\r\n\r\nconst Timer = () => {\r\n  const sessionTime = 10 * 1,\r\n    relaxTime = 5 * 1;\r\n  const audio = new Audio(bell);\r\n  const [state, setState] = useState({\r\n    running: false,\r\n    started: false,\r\n    time: { h: \"0\", m: \"0\", s: \"10\" },\r\n    seconds: sessionTime,\r\n    id: -1,\r\n    open: false,\r\n    startTime: 0,\r\n    sessionId: 1,\r\n    relax: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await fetchAPI(\"interval\", {\r\n        method: \"GET\",\r\n      });\r\n      let max = 0;\r\n      if (!data || data.length === 0) {\r\n        return null;\r\n      }\r\n      data.map((interval) => {\r\n        max = max < interval.session ? interval.session : max;\r\n        return interval.session;\r\n      });\r\n      const ssid = max + 1;\r\n      console.log(\"ssid\", ssid);\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          sessionId: ssid,\r\n        };\r\n      });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const countDown = () => {\r\n    setState((prevState) => {\r\n      prevState.seconds <= 2 ? audio.play() : audio.pause();\r\n      return {\r\n        ...prevState,\r\n        time: secondsToTime(prevState.seconds),\r\n        seconds:\r\n          prevState.seconds !== 0\r\n            ? prevState.seconds - 1\r\n            : prevState.relax\r\n            ? sessionTime\r\n            : relaxTime,\r\n        relax: (prevState.seconds === 0) ^ prevState.relax,\r\n      };\r\n    });\r\n  };\r\n\r\n  const secondsToTime = (seconds) => {\r\n    let hours = Math.floor(seconds / (60 * 60));\r\n    seconds %= 60 * 60;\r\n    let minutes = Math.floor(seconds / 60);\r\n    seconds %= 60;\r\n    return {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n  };\r\n\r\n  const openHandle = (value) => {\r\n    setState((prevState) => {\r\n      return { ...prevState, open: value };\r\n    });\r\n  };\r\n\r\n  const toggleTimer = async () => {\r\n    if (!state.started) {\r\n      //clicked start\r\n      let id = setInterval(countDown, 1000);\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          started: true,\r\n          running: true,\r\n          id: id,\r\n          startTime: moment().format(\"DD-MM-YYYY HH:mm:ss\"),\r\n        };\r\n      });\r\n    } else {\r\n      //clicked stop\r\n      let intervalid = await fetchAPI(`interval`, { method: \"id\" });\r\n      if (state.running) {\r\n        await fetchAPI(\"interval\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            startTime: state.startTime,\r\n            pauseTime: moment().format(\"DD-MM-YYYY HH:mm:ss\"),\r\n            reason: \"session completed\",\r\n            session: state.relax\r\n              ? moment()\r\n                  .subtract(relaxTime - state.seconds, \"seconds\")\r\n                  .format(\"DD-MM-YYYY HH:mm:ss\")\r\n              : state.sessionId,\r\n            id: intervalid,\r\n          }),\r\n        });\r\n      }\r\n\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          running: false,\r\n          started: false,\r\n          seconds: sessionTime,\r\n          time: secondsToTime(sessionTime),\r\n          sessionId: prevState.sessionId + 1,\r\n          relax: false,\r\n          // open: true,\r\n        };\r\n      });\r\n      clearInterval(state.id);\r\n    }\r\n  };\r\n\r\n  const pauseTimer = async () => {\r\n    if (!state.running) {\r\n      //clicked resume\r\n      let id = setInterval(countDown, 1000);\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          running: true,\r\n          id: id,\r\n          startTime: moment().format(\"DD-MM-YYYY HH:mm:ss\"),\r\n        };\r\n      });\r\n    } else {\r\n      //clicked pause\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          running: false,\r\n          open: true,\r\n        };\r\n      });\r\n      clearInterval(state.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ReasonBox\r\n        props={{\r\n          open: state.open,\r\n          id: state.sessionId,\r\n          pauseTime: moment().format(\"DD-MM-YYYY HH:mm:ss\"),\r\n          startTime: state.startTime,\r\n        }}\r\n        openHandle={openHandle}\r\n      />\r\n      <div className=\"timer-glow\">\r\n        <div className=\"timer\">\r\n          <h2>{state.relax ? \"Relax...\" : \"Focus...\"}</h2>\r\n          <h2>\r\n            {state.time.h}\r\n            {\"h\"} {state.time.m}\r\n            {\"m\"} {state.time.s} {\"s\"}\r\n          </h2>\r\n          <div style={{ display: \"flex\" }}>\r\n            {state.started && (\r\n              <button className=\"secondary-btn\" onClick={pauseTimer}>\r\n                {state.running ? \"PAUSE\" : \"RESUME\"}\r\n              </button>\r\n            )}\r\n            <button className=\"btn\" onClick={toggleTimer}>\r\n              {!state.started ? \"START\" : \"STOP\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { FaFacebookF, FaInstagram, FaTwitter } from \"react-icons/fa\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <div id=\"header-item1\" className=\"header-item\">\r\n          <h5>SA</h5>\r\n        </div>\r\n\r\n        <div className=\"header-item\">\r\n          <h3>AUDIT</h3>\r\n        </div>\r\n\r\n        <div id=\"header-item2\" className=\"header-item\">\r\n          <div style={{ padding: \"10px\" }}>\r\n            <FaFacebookF />\r\n          </div>\r\n          <div style={{ padding: \"10px\" }}>\r\n            <FaInstagram />\r\n          </div>\r\n          <div style={{ padding: \"10px\" }}>\r\n            <FaTwitter />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import moment from \"moment\";\r\nimport { React, useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart,\r\n  Tooltip,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Title,\r\n  registerables,\r\n} from \"chart.js\";\r\nimport { fetchAPI } from \"./fetchAPI\";\r\n\r\nimport \"@testing-library/react\";\r\n\r\nChart.register(Tooltip, CategoryScale, LinearScale, Title);\r\nChart.register(...registerables);\r\n\r\nconst Stats = () => {\r\n  const [state, setState] = useState({\r\n    pauseResponse: [],\r\n    startResponse: [],\r\n    intervals: [],\r\n    average: 0,\r\n    chartdata: {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\r\n        datasets: [\r\n          {\r\n            label: \"Time in seconds\",\r\n            data: [65, 59, 80, 81, 56],\r\n            backgroundColor: [\r\n              \"#50AF95\",\r\n              \"#f3ba2f\",\r\n              \"#50AF95\",\r\n              \"#f3ba2f\",\r\n              \"#50AF95\",\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: \"Time spent [Hour]\",\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"bottom\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      const intervals = await fetchAPI(\"interval\", {\r\n        method: \"GET\",\r\n      });\r\n      if (!intervals || intervals.length === 0) {\r\n        return null;\r\n      }\r\n      let sum = 0;\r\n      intervals.map((interval) => {\r\n        const date1 = moment(interval.pauseTime, \"DD-MM-YYYY HH:mm:ss\"),\r\n          date2 = moment(interval.startTime, \"DD-MM-YYYY HH:mm:ss\");\r\n        sum += date1.diff(date2, \"seconds\");\r\n        return 0;\r\n      });\r\n\r\n      let avg = (sum / intervals.length).toFixed(2);\r\n\r\n      setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          pauseResponse: intervals.pauseTime,\r\n          startResponse: intervals.startTime,\r\n          average: avg,\r\n          intervals: intervals,\r\n        };\r\n      });\r\n\r\n      dayTimeAverage(intervals);\r\n\r\n      console.log(\"average session length: \", avg);\r\n    };\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const dayTimeAverage = async (intervals) => {\r\n    const targetIntervals = [];\r\n    for (let i = 1; i < 10; i++) {\r\n      targetIntervals.push(\"0\" + i + \":00:00\");\r\n    }\r\n    for (let i = 10; i < 24; i++) {\r\n      targetIntervals.push(i + \":00:00\");\r\n    }\r\n    var testIntervals = [];\r\n    for (let i = 0; intervals.length > 0 && i < 23; i++) {\r\n      let temp_intervals = intervals.filter((value) => {\r\n        return (\r\n          moment(value.startTime, \"DD-MM-YYYY HH:mm:ss\").hour() <\r\n            moment(targetIntervals[i + 1], \"HH:mm:ss\").hour() &&\r\n          moment(value.startTime, \"DD-MM-YYYY HH:mm:ss\").hour() >=\r\n            moment(targetIntervals[i], \"HH:mm:ss\").hour()\r\n        );\r\n      });\r\n      let temp_sum = 0;\r\n      temp_intervals.map((interval) => {\r\n        var a = Math.min(\r\n          60 *\r\n            60 *\r\n            (moment(interval.startTime, \"DD-MM-YYYY HH:mm:ss\").hour() + 1),\r\n          60 * 60 * moment(interval.pauseTime, \"DD-MM-YYYY HH:mm:ss\").hour() +\r\n            60 * moment(interval.pauseTime, \"DD-MM-YYYY HH:mm:ss\").minute() +\r\n            moment(interval.pauseTime, \"DD-MM-YYYY HH:mm:ss\").seconds()\r\n        );\r\n        var b =\r\n          60 * 60 * moment(interval.startTime, \"DD-MM-YYYY HH:mm:ss\").hour() +\r\n          60 * moment(interval.startTime, \"DD-MM-YYYY HH:mm:ss\").minute() +\r\n          moment(interval.startTime, \"DD-MM-YYYY HH:mm:ss\").seconds();\r\n        var ts = a - b;\r\n        temp_sum += Math.log10(1 + ts);\r\n\r\n        return 0;\r\n      });\r\n      testIntervals.push(temp_sum);\r\n    }\r\n\r\n    plotGraph({\r\n      labels: targetIntervals,\r\n      data: testIntervals,\r\n    });\r\n  };\r\n\r\n  const plotGraph = ({ labels, data }) => {\r\n    // console.log(\"labels\", labels, \"data\", data);\r\n    const colors = [\"#50AF95\", \"#f3ba2f\"];\r\n    const backgroundColor = [\r\n      labels.map((label, idx) => {\r\n        return colors[idx % 2];\r\n      }),\r\n    ];\r\n\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        chartdata: {\r\n          ...prevState.chartdata,\r\n          data: {\r\n            ...prevState.chartdata.data,\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: \"Time in log (seconds)\",\r\n                data: data,\r\n                backgroundColor: backgroundColor[0],\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"box\">\r\n        <h1>{\"Stats\"}</h1>\r\n        <div className=\"box-items\">\r\n          <p>{\"Average Session Time\"}</p>\r\n          <p>{state.average}</p>\r\n        </div>\r\n        <div className=\"box-items\">\r\n          <p>{\"Number of sessions\"}</p>\r\n          <p>{state.intervals.length}</p>\r\n        </div>\r\n        <div>\r\n          <Bar data={state.chartdata.data} options={state.chartdata.options} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { React } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = (theme) =>\r\n  makeStyles((e) => ({\r\n    root: {\r\n      \"& .MuiFilledInput-root\": {\r\n        background: theme.primaryColor,\r\n        color: theme.brightColor,\r\n        borderColor: theme.brightColor,\r\n      },\r\n      \"& .MuiInput-root\": {\r\n        // background: theme.primaryColor,\r\n        color: theme.brightColor,\r\n        borderColor: theme.brightColor,\r\n      },\r\n    },\r\n    cssLabel: {\r\n      color: theme.brightColor,\r\n      \"&.Mui-focused\": {\r\n        color: theme.secondaryColor,\r\n      },\r\n    },\r\n    cssOutlinedInput: {\r\n      borderColor: theme.brightColor,\r\n      \"&:not(hover):not($disabled):not($cssFocused) $notchedOutline\": {\r\n        borderColor: theme.brightColor, //default\r\n      },\r\n      \"&:hover:not($disabled):not($cssFocused) $notchedOutline\": {\r\n        borderColor: theme.brightColor, //hovered #DCDCDC\r\n      },\r\n      \"&$cssFocused $notchedOutline\": {\r\n        borderColor: theme.brightColor, //focused\r\n      },\r\n    },\r\n    cssInputLabel: {\r\n      color: theme.brightColor,\r\n    },\r\n    notchedOutline: {},\r\n    cssFocused: {\r\n      color: theme.brightColor,\r\n      borderColor: theme.brightColor,\r\n    },\r\n    disabled: {},\r\n  }));\r\n\r\nconst CustomTextField = (props) => {\r\n  const brightColor = \"#c4c4c4a5\",\r\n    primaryColor = \"#222831\",\r\n    secondaryColor = \"#393e46\",\r\n    highlightColor = \"#00adb5\";\r\n  const classes = useStyles({\r\n    primaryColor: primaryColor,\r\n    secondaryColor: secondaryColor,\r\n    highlightColor: highlightColor,\r\n    brightColor: brightColor,\r\n  })();\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        className={classes.root}\r\n        id=\"standard-basic\"\r\n        label={props.label}\r\n        value={props.value}\r\n        variant=\"standard\"\r\n        // margin=\"normal\"\r\n        fullWidth\r\n        style={{ width: \"200%\" }}\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: classes.cssLabel,\r\n            focused: classes.cssFocused,\r\n          },\r\n        }}\r\n        InputProps={{\r\n          classes: {\r\n            root: classes.cssOutlinedInput,\r\n            focused: classes.cssFocused,\r\n          },\r\n          inputMode: \"numeric\",\r\n        }}\r\n        onChange={(e) => {\r\n          props.textHandler(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n","import React from \"react\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\n\r\nconst DatePicker = (props) => {\r\n  return (\r\n    <DateTimePicker\r\n      onChange={(date) => {\r\n        props.dateHandler(date);\r\n      }}\r\n      value={props.value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { fetchAPI } from \"./fetchAPI\";\r\n\r\n//moment(date, \"dddd MM-DD-YYYY HH:mm:ss a\").format(\"y-MM-DD HH:mm\"),\r\n\r\nconst Tasks = () => {\r\n  const [state, setState] = useState({\r\n    newTask: {\r\n      title: \"\",\r\n      description: \"\",\r\n      deadline: \"\",\r\n    },\r\n    tasks: [],\r\n    opened: -1,\r\n  });\r\n  const titleHandler = (value) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        newTask: { ...prevState.newTask, title: value },\r\n      };\r\n    });\r\n  };\r\n  const descriptionHandler = (value) => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        newTask: { ...prevState.newTask, description: value },\r\n      };\r\n    });\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    console.log(\"submitting...\");\r\n    let taskid = await fetchAPI(`tasks`, { method: \"id\" });\r\n    console.log(\"taskid\", taskid);\r\n    const data = await fetchAPI(`tasks`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: state.newTask.title,\r\n        description: state.newTask.description,\r\n        deadline: moment(\r\n          state.newTask.deadline,\r\n          \"dddd MM-DD-YYYY HH:mm:ss a\"\r\n        ).format(\"DD-MM-y HH:mm\"),\r\n        id: taskid,\r\n      }),\r\n    });\r\n    setState((prevState) => {\r\n      // console.log({\r\n      //   ...prevState,\r\n      //   newTask: { title: \"\", description: \"\", deadline: \"\" },\r\n      //   tasks: [...prevState.tasks, data[data.length - 1]],\r\n      // });\r\n      return {\r\n        ...prevState,\r\n        newTask: { title: \"\", description: \"\", deadline: \"\" },\r\n        tasks: [...prevState.tasks, data[data.length - 1]],\r\n      };\r\n    });\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    const res = await fetchAPI(`tasks`, { method: \"DELETE\", id: id });\r\n    res.status === 200\r\n      ? setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            tasks: prevState.tasks.filter((task) => task.id !== id),\r\n          };\r\n        })\r\n      : alert(\"Error deleting tasks\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      console.log(\"box-lists-wrapper\" + (1 === state.opened ? \"-opened\" : \"\"));\r\n      const data = await fetchAPI(`tasks`, { method: \"GET\" });\r\n      console.log(\"data:\", data);\r\n      setState((prevState) => {\r\n        return { ...prevState, tasks: data };\r\n      });\r\n      return data;\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"box\">\r\n        <h1>{\"Tasks\"}</h1>\r\n        <div className=\"box-lists\">\r\n          <div className=\"box-lists-form\">\r\n            <div className=\"box-lists-form-wrapper\">\r\n              <CustomTextField\r\n                key={1}\r\n                label={\"Title\"}\r\n                textHandler={titleHandler}\r\n                value={state.newTask.title}\r\n              />\r\n            </div>\r\n            <div className=\"box-lists-form-wrapper\">\r\n              <CustomTextField\r\n                key={2}\r\n                label={\"Description\"}\r\n                textHandler={descriptionHandler}\r\n                value={state.newTask.description}\r\n              />\r\n            </div>\r\n            <div className=\"box-lists-form-wrapper\">\r\n              <DatePicker\r\n                value={state.newTask.deadline}\r\n                dateHandler={(value) => {\r\n                  console.log(\r\n                    \"state.newTask.deadline\",\r\n                    state.newTask.deadline,\r\n                    \"value\",\r\n                    value\r\n                  );\r\n                  setState((prevState) => {\r\n                    return {\r\n                      ...prevState,\r\n                      newTask: { ...prevState.newTask, deadline: value },\r\n                    };\r\n                  });\r\n                }}\r\n              />\r\n              <Button variant=\"contained\" onClick={submitHandler}>\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {state.tasks &&\r\n            state.tasks.map((task, idx) => {\r\n              return (\r\n                <div\r\n                  className={\r\n                    \"box-lists-wrapper\" +\r\n                    (task.id === state.opened ? \"-opened\" : \"\")\r\n                  }\r\n                  key={idx}\r\n                  onDoubleClick={() => {\r\n                    setState((prevState) => {\r\n                      return {\r\n                        ...prevState,\r\n                        opened: prevState.opened !== task.id ? task.id : -1,\r\n                      };\r\n                    });\r\n                  }}\r\n                >\r\n                  <div className={\"box-lists-wrapper-content\"}>\r\n                    <h4>{task.title}</h4>\r\n                    <div>\r\n                      <p style={{ display: \"inline-block\" }}>\r\n                        {moment(task.deadline, \"DD-MM-YYYY HH:mm:ss\").fromNow()}\r\n                      </p>\r\n                      <CloseIcon\r\n                        onClick={(e) => {\r\n                          deleteTask(task.id);\r\n                        }}\r\n                        style={{ display: \"inline-block\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {state.opened === task.id && (\r\n                    <div className=\"box-lists-wrapper-content\">\r\n                      {\" \"}\r\n                      {task.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { fetchAPI } from \"./fetchAPI\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\nimport \"@fullcalendar/daygrid/main.css\";\r\n\r\nconst CustomCalendar = () => {\r\n  const [state, setState] = useState({\r\n    tasks: [],\r\n    events: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const data = await fetchAPI(\"tasks\", { method: \"GET\" });\r\n      let event = [];\r\n      console.log(\"data\", data);\r\n      if (!data || data.length === 0) {\r\n        return null;\r\n      }\r\n      data.map((task) => {\r\n        event.push({\r\n          title: task.title,\r\n          date: new Date(\r\n            moment(task.deadline, \"DD-MM-y HH:mm\").format(\r\n              \"ddd MMMM DD yy hh:mm:ss a\"\r\n            )\r\n          ),\r\n        });\r\n        return task;\r\n      });\r\n      setState((prevState) => {\r\n        return { ...prevState, tasks: data, events: event };\r\n      });\r\n      console.log(\"event\", event);\r\n      return state.tasks;\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <div className=\"box\"> */}\r\n      <div\r\n        style={{\r\n          height: \"60vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FullCalendar\r\n          initialView=\"timeGridWeek\"\r\n          plugins={[timeGridPlugin]}\r\n          events={state.events}\r\n        />\r\n      </div>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n","import \"./App.css\";\r\nimport Timer from \"./components/Timer\";\r\nimport Header from \"./components/Header\";\r\nimport Stats from \"./components/Stats\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport CustomCalendar from \"./components/CustomCalendar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"page\">\r\n        <Stats />\r\n        <Timer />\r\n      </div>\r\n      <div className=\"page\">\r\n        <Tasks />\r\n      </div>\r\n      <div className=\"page\">\r\n        <CustomCalendar />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}